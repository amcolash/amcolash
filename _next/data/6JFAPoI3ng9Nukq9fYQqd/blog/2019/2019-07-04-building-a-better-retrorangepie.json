{"pageProps":{"post":{"title":"Building a Better RetrOrangePie","date":"2019-07-05T04:45:06.000Z","slug":"2019/2019-07-04-building-a-better-retrorangepie","content":"<h2>Dealing with Old Software</h2>\n<p>Open Source software can be such a double-edged sword for me. A lot of times I want that one extra little feature or customization. If you take a look over at my <a href=\"https://github.com/amcolash\">Github</a> you will see that (as of writing) I have 80 repositories with about 1/4 being forks of other projects. I often add a small change and file a PR or use the code as a starting point for another project. I love being able to share code and being able to tweak things to my hearts content.</p>\n<p>This nature of tweaking and getting things \"just right\" often leads me late into the night to get things just how I want them. The end result is always satisfying, but I find the journey and satisfaction of knowing I got it working how <em>I</em> wanted is the best part. I wrote about hacking my <a href=\"https://www.8bcraft.com/product/retrostone/\">RetroStone</a> - a portable emulating device in the form factor of a GameBoy. I love the little thing, but want so much more! Last time I was writing about getting some aspects of wifi working on the device. This time I am going to walk through the things I did to get a much more updated set of software running on the device.</p>\n<p>When I initially got the device, I flashed version 1.3 of the <a href=\"http://forum.8bcraft.com/viewtopic.php?t=1818\">SupremeRetrostone</a> image (a modified version of <a href=\"http://retrorangepi.org\">RetrOrangePie</a> - a fork of <a href=\"https://retropie.org.uk/\">RetroPie</a>) which provides a nice front-end for emulating a whole handful of systems using <a href=\"https://emulationstation.org/\">EmulationStation</a> and <a href=\"https://www.retroarch.com/\">RetroArch</a>. Needless to say, it is a pretty large amount of software working together to get things happily working together.</p>\n<h2>Upgrading from Source</h2>\n<p>The last update to RetrOrangePie (and by association Supreme Retrostone) was about 8 months ago at the time of writing. While a lot of the packages for the debian-based system could be updated with <code>apt</code>, this image is also running on debian jessie - which has reached EoL and has started to lose backport updates. This makes things harder to upgrade and means a lot more compiling from source. Luckily, to update most of the interesting emulation packages, the <code>RetroPie-Setup</code> scripts provide a simple way to grab and compile the sources of these different bits.</p>\n<p>There are 5 categories of packages/tools that RetroPie supports - <code>core</code>, <code>main</code>, <code>optional</code>, <code>driver</code> and <code>experimental</code>. Of those 5, most of my packages were from <code>core</code>, <code>main</code> and <code>optional</code>.</p>\n<p>Out of the box, the <code>core</code> parts (like retroarch - w/o emulator cores and emulationstation) compiled mostly well. I was however not able to compile EmulationStation immediately. I was running into errors with a missing library named <code>rapidjson-dev</code> and since it was a newer package, it did not exist in the legacy repositories. I was able to find some more info with this <a href=\"https://retropie.org.uk/forum/topic/21542/rapidjson-dev-package-not-available/6\">forumn thread</a> and eventually found a pre-built <code>.deb</code> package to install via <code>dpkg</code>.</p>\n<p>The next step was to work on <code>main</code> - which contains most of the emulators that I am using. This one made me the most nervous as it was a whole handful of emulators that had all kinds of dependencies that would need to be fetched manually if they were not in the jessie repositories. A few hours later, I came back and found that only 2 of the 20 or so emulators failed to build: <code>mupen64plus</code> and <code>lr-caprice32</code>. I was not too worried about this and decided to move on since I already had an older but functioning emulator for n64 and hadn't been emulating amstrad at all.</p>\n<p>Onto <code>optional</code>! I only tried to update and build some of the packages here since I only wanted some emulators to work for my own use (mainly nes, snes, genesis, gb, gbc, gba, psx, n64 and some of the atari variants). Things went smoothly for <code>lr_snes9x</code>, <code>lr-beetle-gb</code> and <code>scummvm</code>.</p>\n<p>Overall things went pretty smoothly! Now I have an up-to-date little machine. There are some individual patches I think I may need to apply to get <code>retroarch</code> working exactly how I want but I was happy at just how painless things were on the whole. I also will be unpacking the configurations from SupremeRetrostone on top of the device so that it is pre-optimized.</p>\n<p>Until next time, happy gaming!</p>\n"}},"__N_SSG":true}