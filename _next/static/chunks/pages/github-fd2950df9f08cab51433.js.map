{"version":3,"file":"static/chunks/pages/github-fd2950df9f08cab51433.js","mappings":"iOAQA,SAASA,EAAKC,GACZ,OACE,eAAKC,MAAO,CAAEC,aAAc,QAAF,OAAUC,EAAAA,GAAV,aAA1B,WACE,eAAKF,MAAO,CAAEG,QAAS,OAAQC,WAAY,YAA3C,WACE,aAAGC,KAAMN,EAAMO,KAAKC,SAApB,SAA+BR,EAAMO,KAAKE,OACzCT,EAAMO,KAAKG,OAAQ,QAAC,IAAD,CAAWC,IAAI,OAAOV,MAAO,CAAEW,WAAY,MAC/D,gBAAMX,MAAO,CAAEW,WAAY,EAAGC,SAAU,SAAxC,sBAA4DC,EAAAA,EAAAA,GAAe,IAAIC,KAAKf,EAAMO,KAAKS,WAAY,IAAID,MAA/G,eAEF,wBAAMf,EAAMO,KAAKU,iBAKvB,SAASC,EAAT,GAAyB,IAARC,EAAQ,EAARA,KACf,GAAwBC,EAAAA,EAAAA,IAAO,6EAAD,OAA8ED,IAApGZ,EAAR,EAAQA,KAER,OAFA,EAAcc,MAGI,IAATF,GACL,eAAKlB,MAAO,CAAEG,QAAS,QAAvB,kEACsD,QAAC,IAAD,CAAOH,MAAO,CAAEW,WAAY,SAEhF,KACDL,EAEEA,EAAKe,KAAI,SAACC,GAAD,OAAO,QAACxB,EAAD,CAAMQ,KAAMgB,GAAQA,EAAEC,OAFlB,IAATL,GAAa,uCAAwB,KAKzD,SAASM,IACP,IAAQlB,GAASa,EAAAA,EAAAA,IAAO,yCAAhBb,KACR,OAAO,4CAAsBA,GAAQA,EAAKmB,aAAnC,OAGM,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,KAEjB,OACE,QAAC,KAAD,CACEC,MAAO,CACLC,QAAS,SAACC,EAAUC,GAAX,OAAoBC,MAAMF,EAAUC,GAAME,MAAK,SAACC,GAAD,OAASA,EAAIC,WACrEC,aAAc,SAACjB,EAAOkB,EAAKC,EAAQC,EAArB,GAAoD,EAAjBC,aAHrD,UAQE,0BACE,6CACA,QAAC,IAAD,CACEC,SAAS,WACTC,MAAO,CACLC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQrB,EAASE,MAAQ,OAAS,QAEpC7B,MAAO,CAAEiD,MAAOtB,EAASE,MAAQqB,EAAAA,GAAAA,MAAeA,EAAAA,GAAAA,MAAcjD,aAAc,OAI9E,QAACuB,EAAD,KACA,QAACP,EAAD,CAAOC,KAAM,KACb,QAACD,EAAD,CAAOC,KAAM,W,sBCpEhBiC,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,UACA,WACE,OAAO,EAAQ,U","sources":["webpack://_N_E/./pages/github.jsx","webpack://_N_E/?6cb6"],"sourcesContent":["import { formatDistance } from 'date-fns';\nimport { Frown, GitBranch } from 'react-feather';\nimport GitHubCalendar from 'react-github-calendar';\nimport useSWR, { SWRConfig } from 'swr';\nimport useDarkMode from 'use-dark-mode';\n\nimport { Colors, OuterPadding } from '../lib/constants';\n\nfunction Repo(props) {\n  return (\n    <div style={{ marginBottom: `calc(${OuterPadding} / 1.25)` }}>\n      <div style={{ display: 'flex', alignItems: 'flex-end' }}>\n        <a href={props.data.html_url}>{props.data.name}</a>\n        {props.data.fork && <GitBranch alt=\"fork\" style={{ marginLeft: 8 }} />}\n        <span style={{ marginLeft: 8, fontSize: '0.7em' }}>(Pushed {formatDistance(new Date(props.data.pushed_at), new Date())} ago)</span>\n      </div>\n      <div>{props.data.description}</div>\n    </div>\n  );\n}\n\nfunction Repos({ page }) {\n  const { data, error } = useSWR(`https://api.github.com/users/amcolash/repos?sort=pushed&per_page=100&page=${page}`);\n\n  if (error)\n    return page === 1 ? (\n      <div style={{ display: 'flex' }}>\n        Looks like we can't access the Github API right now <Frown style={{ marginLeft: 10 }} />\n      </div>\n    ) : null;\n  if (!data) return page === 1 ? <div>Loading...</div> : null;\n\n  return data.map((r) => <Repo data={r} key={r.id} />);\n}\n\nfunction RepoHeader() {\n  const { data } = useSWR(`https://api.github.com/users/amcolash`);\n  return <h3>My Repositories ({data && data.public_repos})</h3>;\n}\n\nexport default function Github() {\n  const darkMode = useDarkMode();\n\n  return (\n    <SWRConfig\n      value={{\n        fetcher: (resource, init) => fetch(resource, init).then((res) => res.json()),\n        onErrorRetry: (error, key, config, revalidate, { retryCount }) => {\n          if (retryCount > 1) return;\n        },\n      }}\n    >\n      <div>\n        <h3>My Contributions</h3>\n        <GitHubCalendar\n          username=\"amcolash\"\n          theme={{\n            level4: '#216e39',\n            level3: '#30a14e',\n            level2: '#40c463',\n            level1: '#9be9a8',\n            level0: darkMode.value ? '#444' : '#ddd',\n          }}\n          style={{ color: darkMode.value ? Colors.White : Colors.Black, marginBottom: 40 }}\n        />\n\n        {/* Get all repositories. Since I am not at 200 total yet, this will be more than sufficient for now */}\n        <RepoHeader />\n        <Repos page={1} />\n        <Repos page={2} />\n      </div>\n    </SWRConfig>\n  );\n}\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/github\",\n      function () {\n        return require(\"private-next-pages/github.jsx\");\n      }\n    ]);\n  "],"names":["Repo","props","style","marginBottom","OuterPadding","display","alignItems","href","data","html_url","name","fork","alt","marginLeft","fontSize","formatDistance","Date","pushed_at","description","Repos","page","useSWR","error","map","r","id","RepoHeader","public_repos","Github","darkMode","useDarkMode","value","fetcher","resource","init","fetch","then","res","json","onErrorRetry","key","config","revalidate","retryCount","username","theme","level4","level3","level2","level1","level0","color","Colors","window","__NEXT_P","push"],"sourceRoot":""}