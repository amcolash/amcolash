{"version":3,"sources":["webpack://_N_E/./pages/projects.jsx","webpack://_N_E/./components/Link.jsx","webpack://_N_E/./node_modules/next/link.js","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?5b48","webpack://_N_E/../../client/link.tsx","webpack://_N_E/../../client/use-intersection.tsx"],"names":["sortMap","project","style","marginBottom","OuterPadding","width","height","backgroundSize","backgroundPosition","Projects","allProjects","lastSection","first","display","justifyContent","flexWrap","maxWidth","sort","a","b","aSort","section","map","p","header","flex","marginTop","textAlign","href","slug","margin","className","backgroundImage","thumbnail","title","cssRule","textShadow","Colors","Black","color","White","Green","buttonLinkClass","interactiveStyle","Link","props","inner","external","target","children","body","module","exports","window","__NEXT_P","push","prefetched","prefetch","isLocalURL","router","err","curLocale","options","pathname","React","resolveHref","as","resolvedAs","child","Children","childRef","useIntersection","rootMargin","setRef","el","setIntersectionRef","useEffect","shouldPrefetch","isVisible","locale","isPrefetched","childProps","ref","onClick","e","nodeName","event","isModifiedEvent","scroll","replace","shallow","success","document","linkClicked","priority","localeDomain","getDomainLocale","addBasePath","addLocale","isDisabled","unobserve","useState","useCallback","id","instance","observers","elements","observer","IntersectionObserver","entries","entry","callback","createObserver","observe","setVisible","idleCallback","requestIdleCallback","cancelIdleCallback","hasIntersectionObserver"],"mappings":"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","file":"static/chunks/pages/projects-fe97b3a9d4ba88887e9e.js","sourcesContent":["import { Fragment } from 'react';\nimport { style } from 'typestyle';\n\nimport { Link } from '../components/Link';\nimport { getAllData, projectsDirectory } from '../lib/api';\nimport { OuterPadding } from '../lib/constants';\n\nconst sortMap = {\n  'Personal and School Projects (2014-Present)': 1,\n  'Liberty Mutual (2014)': 2,\n  'UW SHOW (2014-2015)': 3,\n  'Perblue (2015-2018)': 4,\n};\n\nconst project = style({\n  marginBottom: `calc(${OuterPadding} / 1.75)`,\n  width: '16rem',\n  height: '9rem',\n  backgroundSize: 'cover',\n  backgroundPosition: 'center',\n});\n\nexport default function Projects({ allProjects }) {\n  let lastSection = '';\n  let first = true;\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center' }}>\n      <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center', maxWidth: 960 }}>\n        {allProjects\n          .sort((a, b) => {\n            const aSort = sortMap[a.section];\n            const bSort = sortMap[b.section];\n            return bSort - aSort;\n          })\n          .map((p) => {\n            let header;\n\n            if (lastSection != p.section) {\n              header = (\n                <>\n                  <div style={{ flex: '100%' }} />\n                  <h2 style={{ marginTop: first ? 0 : 32, marginBottom: 0 }}>{p.section}</h2>\n                  <div style={{ flex: '100%' }} />\n                </>\n              );\n              lastSection = p.section;\n            }\n\n            first = false;\n\n            return (\n              <Fragment key={p.slug}>\n                {header}\n                <div style={{ textAlign: 'center' }}>\n                  <Link href={'/projects/' + p.slug} style={{ display: 'block', margin: '1.5rem', marginTop: '1rem' }}>\n                    <div className={project} style={{ backgroundImage: `url('${p.thumbnail}')` }} />\n                    {p.title}\n                  </Link>\n                </div>\n              </Fragment>\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n\nexport async function getStaticProps() {\n  const allProjects = getAllData(['title', 'date', 'slug', 'section', 'thumbnail'], projectsDirectory);\n\n  return {\n    props: { allProjects },\n  };\n}\n","import NextLink from 'next/link';\nimport Tooltip from 'the-only-react-tooltip';\nimport { cssRule, style } from 'typestyle';\n\nimport { Colors, interactiveStyle } from '../lib/constants';\n\ncssRule('.dark-mode a', {\n  textShadow: `1px 1px 1px ${Colors.Black}`,\n  color: Colors.White,\n});\n\ncssRule('.light-mode a, .dark-mode .resume a', {\n  textShadow: `1px 1px 1px ${Colors.White}`,\n  color: Colors.Black,\n});\n\ncssRule('.dark-mode a:hover, .light-mode a:hover', {\n  color: Colors.Green,\n});\n\nconst buttonLinkClass = style({ ...interactiveStyle });\n\nexport function Link(props) {\n  const inner = props.external ? (\n    <a\n      className={`link ${buttonLinkClass} abutton`}\n      style={{ ...props.style, display: 'flex', color: Colors.Black }}\n      href={props.href}\n      target={props.target}\n    >\n      {props.children}\n    </a>\n  ) : (\n    <NextLink href={props.href}>\n      <a style={{ ...props.style }}>{props.children}</a>\n    </NextLink>\n  );\n\n  return props.title ? <Tooltip body={props.title}>{inner}</Tooltip> : inner;\n}\n","module.exports = require('./dist/client/link')\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/projects\",\n      function () {\n        return require(\"private-next-pages/projects.jsx\");\n      }\n    ]);\n  ","import React, { Children, useEffect } from 'react'\nimport { UrlObject } from 'url'\nimport {\n  addBasePath,\n  addLocale,\n  getDomainLocale,\n  isLocalURL,\n  NextRouter,\n  PrefetchOptions,\n  resolveHref,\n} from '../next-server/lib/router/router'\nimport { useRouter } from './router'\nimport { useIntersection } from './use-intersection'\n\ntype Url = string | UrlObject\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? never : K\n}[keyof T]\ntype OptionalKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? K : never\n}[keyof T]\n\nexport type LinkProps = {\n  href: Url\n  as?: Url\n  replace?: boolean\n  scroll?: boolean\n  shallow?: boolean\n  passHref?: boolean\n  prefetch?: boolean\n  locale?: string | false\n}\ntype LinkPropsRequired = RequiredKeys<LinkProps>\ntype LinkPropsOptional = OptionalKeys<LinkProps>\n\nconst prefetched: { [cacheKey: string]: boolean } = {}\n\nfunction prefetch(\n  router: NextRouter,\n  href: string,\n  as: string,\n  options?: PrefetchOptions\n): void {\n  if (typeof window === 'undefined' || !router) return\n  if (!isLocalURL(href)) return\n  // Prefetch the JSON page if asked (only in the client)\n  // We need to handle a prefetch error here since we may be\n  // loading with priority which can reject but we don't\n  // want to force navigation since this is only a prefetch\n  router.prefetch(href, as, options).catch((err) => {\n    if (process.env.NODE_ENV !== 'production') {\n      // rethrow to show invalid URL errors\n      throw err\n    }\n  })\n  const curLocale =\n    options && typeof options.locale !== 'undefined'\n      ? options.locale\n      : router && router.locale\n\n  // Join on an invalid URI character\n  prefetched[href + '%' + as + (curLocale ? '%' + curLocale : '')] = true\n}\n\nfunction isModifiedEvent(event: React.MouseEvent): boolean {\n  const { target } = event.currentTarget as HTMLAnchorElement\n  return (\n    (target && target !== '_self') ||\n    event.metaKey ||\n    event.ctrlKey ||\n    event.shiftKey ||\n    event.altKey || // triggers resource download\n    (event.nativeEvent && event.nativeEvent.which === 2)\n  )\n}\n\nfunction linkClicked(\n  e: React.MouseEvent,\n  router: NextRouter,\n  href: string,\n  as: string,\n  replace?: boolean,\n  shallow?: boolean,\n  scroll?: boolean,\n  locale?: string | false\n): void {\n  const { nodeName } = e.currentTarget\n\n  if (nodeName === 'A' && (isModifiedEvent(e) || !isLocalURL(href))) {\n    // ignore click for browser’s default behavior\n    return\n  }\n\n  e.preventDefault()\n\n  //  avoid scroll for urls with anchor refs\n  if (scroll == null) {\n    scroll = as.indexOf('#') < 0\n  }\n\n  // replace state instead of push if prop is present\n  router[replace ? 'replace' : 'push'](href, as, {\n    shallow,\n    locale,\n    scroll,\n  }).then((success: boolean) => {\n    if (!success) return\n    if (scroll) {\n      // FIXME: proper route announcing at Router level, not Link:\n      document.body.focus()\n    }\n  })\n}\n\nfunction Link(props: React.PropsWithChildren<LinkProps>) {\n  if (process.env.NODE_ENV !== 'production') {\n    function createPropError(args: {\n      key: string\n      expected: string\n      actual: string\n    }) {\n      return new Error(\n        `Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` +\n          (typeof window !== 'undefined'\n            ? \"\\nOpen your browser's console to view the Component stack trace.\"\n            : '')\n      )\n    }\n\n    // TypeScript trick for type-guarding:\n    const requiredPropsGuard: Record<LinkPropsRequired, true> = {\n      href: true,\n    } as const\n    const requiredProps: LinkPropsRequired[] = Object.keys(\n      requiredPropsGuard\n    ) as LinkPropsRequired[]\n    requiredProps.forEach((key: LinkPropsRequired) => {\n      if (key === 'href') {\n        if (\n          props[key] == null ||\n          (typeof props[key] !== 'string' && typeof props[key] !== 'object')\n        ) {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: props[key] === null ? 'null' : typeof props[key],\n          })\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _: never = key\n      }\n    })\n\n    // TypeScript trick for type-guarding:\n    const optionalPropsGuard: Record<LinkPropsOptional, true> = {\n      as: true,\n      replace: true,\n      scroll: true,\n      shallow: true,\n      passHref: true,\n      prefetch: true,\n      locale: true,\n    } as const\n    const optionalProps: LinkPropsOptional[] = Object.keys(\n      optionalPropsGuard\n    ) as LinkPropsOptional[]\n    optionalProps.forEach((key: LinkPropsOptional) => {\n      const valType = typeof props[key]\n\n      if (key === 'as') {\n        if (props[key] && valType !== 'string' && valType !== 'object') {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: valType,\n          })\n        }\n      } else if (key === 'locale') {\n        if (props[key] && valType !== 'string') {\n          throw createPropError({\n            key,\n            expected: '`string`',\n            actual: valType,\n          })\n        }\n      } else if (\n        key === 'replace' ||\n        key === 'scroll' ||\n        key === 'shallow' ||\n        key === 'passHref' ||\n        key === 'prefetch'\n      ) {\n        if (props[key] != null && valType !== 'boolean') {\n          throw createPropError({\n            key,\n            expected: '`boolean`',\n            actual: valType,\n          })\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _: never = key\n      }\n    })\n\n    // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const hasWarned = React.useRef(false)\n    if (props.prefetch && !hasWarned.current) {\n      hasWarned.current = true\n      console.warn(\n        'Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://err.sh/vercel/next.js/prefetch-true-deprecated'\n      )\n    }\n  }\n  const p = props.prefetch !== false\n\n  const router = useRouter()\n  const pathname = (router && router.pathname) || '/'\n\n  const { href, as } = React.useMemo(() => {\n    const [resolvedHref, resolvedAs] = resolveHref(pathname, props.href, true)\n    return {\n      href: resolvedHref,\n      as: props.as\n        ? resolveHref(pathname, props.as)\n        : resolvedAs || resolvedHref,\n    }\n  }, [pathname, props.href, props.as])\n\n  let { children, replace, shallow, scroll, locale } = props\n\n  // Deprecated. Warning shown by propType check. If the children provided is a string (<Link>example</Link>) we wrap it in an <a> tag\n  if (typeof children === 'string') {\n    children = <a>{children}</a>\n  }\n\n  // This will return the first child, if multiple are provided it will throw an error\n  const child: any = Children.only(children)\n  const childRef: any = child && typeof child === 'object' && child.ref\n\n  const [setIntersectionRef, isVisible] = useIntersection({\n    rootMargin: '200px',\n  })\n  const setRef = React.useCallback(\n    (el: Element) => {\n      setIntersectionRef(el)\n      if (childRef) {\n        if (typeof childRef === 'function') childRef(el)\n        else if (typeof childRef === 'object') {\n          childRef.current = el\n        }\n      }\n    },\n    [childRef, setIntersectionRef]\n  )\n  useEffect(() => {\n    const shouldPrefetch = isVisible && p && isLocalURL(href)\n    const curLocale =\n      typeof locale !== 'undefined' ? locale : router && router.locale\n    const isPrefetched =\n      prefetched[href + '%' + as + (curLocale ? '%' + curLocale : '')]\n    if (shouldPrefetch && !isPrefetched) {\n      prefetch(router, href, as, {\n        locale: curLocale,\n      })\n    }\n  }, [as, href, isVisible, locale, p, router])\n\n  const childProps: {\n    onMouseEnter?: React.MouseEventHandler\n    onClick: React.MouseEventHandler\n    href?: string\n    ref?: any\n  } = {\n    ref: setRef,\n    onClick: (e: React.MouseEvent) => {\n      if (child.props && typeof child.props.onClick === 'function') {\n        child.props.onClick(e)\n      }\n      if (!e.defaultPrevented) {\n        linkClicked(e, router, href, as, replace, shallow, scroll, locale)\n      }\n    },\n  }\n\n  childProps.onMouseEnter = (e: React.MouseEvent) => {\n    if (!isLocalURL(href)) return\n    if (child.props && typeof child.props.onMouseEnter === 'function') {\n      child.props.onMouseEnter(e)\n    }\n    prefetch(router, href, as, { priority: true })\n  }\n\n  // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n  // defined, we specify the current 'href', so that repetition is not needed by the user\n  if (props.passHref || (child.type === 'a' && !('href' in child.props))) {\n    const curLocale =\n      typeof locale !== 'undefined' ? locale : router && router.locale\n\n    // we only render domain locales if we are currently on a domain locale\n    // so that locale links are still visitable in development/preview envs\n    const localeDomain =\n      router &&\n      router.isLocaleDomain &&\n      getDomainLocale(\n        as,\n        curLocale,\n        router && router.locales,\n        router && router.domainLocales\n      )\n\n    childProps.href =\n      localeDomain ||\n      addBasePath(addLocale(as, curLocale, router && router.defaultLocale))\n  }\n\n  return React.cloneElement(child, childProps)\n}\n\nexport default Link\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport {\n  requestIdleCallback,\n  cancelIdleCallback,\n} from './request-idle-callback'\n\ntype UseIntersectionObserverInit = Pick<IntersectionObserverInit, 'rootMargin'>\ntype UseIntersection = { disabled?: boolean } & UseIntersectionObserverInit\ntype ObserveCallback = (isVisible: boolean) => void\ntype Observer = {\n  id: string\n  observer: IntersectionObserver\n  elements: Map<Element, ObserveCallback>\n}\n\nconst hasIntersectionObserver = typeof IntersectionObserver !== 'undefined'\n\nexport function useIntersection<T extends Element>({\n  rootMargin,\n  disabled,\n}: UseIntersection): [(element: T | null) => void, boolean] {\n  const isDisabled: boolean = disabled || !hasIntersectionObserver\n\n  const unobserve = useRef<Function>()\n  const [visible, setVisible] = useState(false)\n\n  const setRef = useCallback(\n    (el: T | null) => {\n      if (unobserve.current) {\n        unobserve.current()\n        unobserve.current = undefined\n      }\n\n      if (isDisabled || visible) return\n\n      if (el && el.tagName) {\n        unobserve.current = observe(\n          el,\n          (isVisible) => isVisible && setVisible(isVisible),\n          { rootMargin }\n        )\n      }\n    },\n    [isDisabled, rootMargin, visible]\n  )\n\n  useEffect(() => {\n    if (!hasIntersectionObserver) {\n      if (!visible) {\n        const idleCallback = requestIdleCallback(() => setVisible(true))\n        return () => cancelIdleCallback(idleCallback)\n      }\n    }\n  }, [visible])\n\n  return [setRef, visible]\n}\n\nfunction observe(\n  element: Element,\n  callback: ObserveCallback,\n  options: UseIntersectionObserverInit\n): () => void {\n  const { id, observer, elements } = createObserver(options)\n  elements.set(element, callback)\n\n  observer.observe(element)\n  return function unobserve(): void {\n    elements.delete(element)\n    observer.unobserve(element)\n\n    // Destroy observer when there's nothing left to watch:\n    if (elements.size === 0) {\n      observer.disconnect()\n      observers.delete(id)\n    }\n  }\n}\n\nconst observers = new Map<string, Observer>()\nfunction createObserver(options: UseIntersectionObserverInit): Observer {\n  const id = options.rootMargin || ''\n  let instance = observers.get(id)\n  if (instance) {\n    return instance\n  }\n\n  const elements = new Map<Element, ObserveCallback>()\n  const observer = new IntersectionObserver((entries) => {\n    entries.forEach((entry) => {\n      const callback = elements.get(entry.target)\n      const isVisible = entry.isIntersecting || entry.intersectionRatio > 0\n      if (callback && isVisible) {\n        callback(isVisible)\n      }\n    })\n  }, options)\n\n  observers.set(\n    id,\n    (instance = {\n      id,\n      observer,\n      elements,\n    })\n  )\n  return instance\n}\n"],"sourceRoot":""}